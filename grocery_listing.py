# -*- coding: utf-8 -*-
"""grocery_listing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1njD0eDC00kO_K9tBb4io0tagO4F_G6YF
"""

print('--------Welcome to grocery list price calculator------')
print("""
 |----------------|
 |  Happy Listing |
 |                |
 |       O        |
 |      /|\\/      |
 |     / |        |
 |      / \\       |
 |     /   \\      |
 |                |
 |----------------|
""")
print('-----Try to keep the budget amount as high as possible-----')
dic={}
def store():#function to store the values
  
  total_amount_needed=0
  items=0
  budget=int(input('Enter your budget:----- TK'))
  budget_must_be_above_0=budget

  while budget_must_be_above_0>0:#while loop used to give only one condition
    product=input('Enter the name of product(type stop to end the listing):----- ').lower()
    if product == 'stop':
      break
    else:
      quantity=int(input('Enter the amount of product:----- '))
      price=int(input('Enter the price of product:------ '))
      multiply=quantity*price
      dic[product]=multiply#update in the dictionary
      budget_must_be_above_0=budget-dic[product]

      for _ in product: #for loop used to iterate the product variable
        budget-=multiply
        if budget<0:# if else condition for less than zero
          print(f'the amount is above budget amount. Extra amount:------ {budget}')
          
        else:
          print(f'Budget remaining:------ {budget}TK')#formating
        break

    for values in dic.values():#total summation of amount and items
      total_amount_needed+=values 
      items+=1
    for product in dic:
      print(f"\----------{quantity}_{product}=={dic[product]}TK---------/")

  print(f'Total ammount needed:------------------- {total_amount_needed}TK')
  print(f'Total number of items:------------------ {items}')
    

def run_again():#run the whole process as much as possible
    storage = store()
    while input("Want to increase budget?(yes/no)------- ") == "yes":
      storage = store()
        
run_again()